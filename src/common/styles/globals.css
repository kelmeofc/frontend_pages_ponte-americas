@import 'tailwindcss';

/* Tailwind v4: garanta que todas as rotas/arquivos sejam escaneados */
@source '../src/**/*.{js,ts,jsx,tsx,mdx}';
@source '../*.{js,ts,jsx,tsx,mdx}';

/* Opcional: inclua outras raízes se existirem (pages/, components/ fora de src) */
@source '../components/**/*.{js,ts,jsx,tsx,mdx}';
@source '../pages/**/*.{js,ts,jsx,tsx,mdx}';

@custom-variant dark (&:is(.dark *));

@utility container {
  margin-inline: auto;
  padding-inline: 2rem;
  @media (width >= --theme(--breakpoint-sm)) {
    max-width: none;
  }
  @media (width >= 1400px) {
    max-width: 1400px;
  }
}

/* Utility para aplicar a fonte clash-display onde necessário (ex.: headings) */
@utility font-clash-display {
  font-family: var(--font-clash-display), var(--font-sans), ui-sans-serif, system-ui, sans-serif;
}

@theme {
  /*
    Fonte base do projeto (rubik) usada por font-sans.
    Usa a variável injetada pelo next/font no <body> e adiciona fallbacks padrão.
  */
  --font-sans: var(--font-rubik), ui-sans-serif, system-ui, sans-serif;
  /*
    Removido o alias circular de --font-clash-display para evitar sombra/loop.
    Para clash-display, utilize a variável do next/font diretamente: var(--font-clash-display)
    através da utility .font-clash-display e estilos globais de headings.
  */

  --color-border: hsl(var(--border));
  --color-input: hsl(var(--input));
  --color-ring: hsl(var(--ring));
  --color-background: hsl(var(--background));
  --color-foreground: hsl(var(--foreground));

  --color-primary: hsl(var(--primary));
  --color-primary-foreground: hsl(var(--primary-foreground));

  --color-secondary: hsl(var(--secondary));
  --color-secondary-foreground: hsl(var(--secondary-foreground));

  --color-destructive: hsl(var(--destructive));
  --color-destructive-foreground: hsl(var(--destructive-foreground));

  --color-muted: hsl(var(--muted));
  --color-muted-foreground: hsl(var(--muted-foreground));

  --color-accent: hsl(var(--accent));
  --color-accent-foreground: hsl(var(--accent-foreground));

  --color-popover: hsl(var(--popover));
  --color-popover-foreground: hsl(var(--popover-foreground));

  --color-card: hsl(var(--card));
  --color-card-foreground: hsl(var(--card-foreground));

  --radius-lg: var(--radius);
  --radius-md: calc(var(--radius) - 2px);
  --radius-sm: calc(var(--radius) - 4px);

  --animate-accordion-down: accordion-down 0.2s ease-out;
  --animate-accordion-up: accordion-up 0.2s ease-out;

  @keyframes accordion-down {
    from {
      height: 0;
    }
    to {
      height: var(--radix-accordion-content-height);
    }
  }
  @keyframes accordion-up {
    from {
      height: var(--radix-accordion-content-height);
    }
    to {
      height: 0;
    }
  }
}

/*
  The default border color has changed to `currentcolor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/
@layer base {
  *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    border-color: var(--color-gray-200, currentcolor);
  }
}

@layer base {
  :root {
    --background: 0 0% 100%;
    --foreground: 222.2 84% 4.9%;

    --card: 0 0% 100%;
    --card-foreground: 222.2 84% 4.9%;

    --popover: 0 0% 100%;
    --popover-foreground: 222.2 84% 4.9%;

    --primary: 236 71% 56%;
    --primary-foreground: 0 98% 100%;

    --primary-gradient-from: 357 93% 38%;
    --primary-gradient-to: 236 71% 56%;
    --primary-gradient-hover-from: 357 100% 30%;
    --primary-gradient-hover-to: 236 100% 40%;

    --secondary: 210 40% 96.1%;
    --secondary-foreground: 222.2 47.4% 11.2%;

    --muted: 210 40% 96.1%;
    --muted-foreground: 215.4 16.3% 46.9%;

    --accent: 210 40% 96.1%;
    --accent-foreground: 222.2 47.4% 11.2%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 214.3 31.8% 91.4%;
    --input: 214.3 31.8% 91.4%;
    --ring: 221.2 83.2% 53.3%;

    --radius: 0.5rem;
  }

  .dark {
    --background: 222.2 84% 4.9%;
    --foreground: 210 40% 98%;

    --card: 222.2 84% 4.9%;
    --card-foreground: 210 40% 98%;

    --popover: 222.2 84% 4.9%;
    --popover-foreground: 210 40% 98%;

    --primary: 217.2 91.2% 59.8%;
    --primary-foreground: 222.2 47.4% 11.2%;

    --primary-gradient-from: 224 100% 60%;
    --primary-gradient-to: 224 100% 45%;
    --primary-gradient-hover-from: 224 100% 65%;
    --primary-gradient-hover-to: 224 100% 50%;

    --secondary: 217.2 32.6% 17.5%;
    --secondary-foreground: 210 40% 98%;

    --muted: 217.2 32.6% 17.5%;
    --muted-foreground: 215 20.2% 65.1%;

    --accent: 217.2 32.6% 17.5%;
    --accent-foreground: 210 40% 98%;

    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 210 40% 98%;

    --border: 217.2 32.6% 17.5%;
    --input: 217.2 32.6% 17.5%;
    --ring: 224.3 76.3% 48%;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }

  /* Estilização da scrollbar - preta e discreta */
  * {
    scrollbar-width: thin;
    scrollbar-color: rgba(0, 0, 0, 0.3) transparent;
    scroll-behavior: smooth;
  }

  /* Webkit browsers (Chrome, Safari, Edge) */
  *::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }

  *::-webkit-scrollbar-track {
    background: transparent;
  }

  *::-webkit-scrollbar-thumb {
    background-color: rgba(0, 0, 0, 0.3);
    border-radius: 3px;
    transition: background-color 0.2s ease;
  }

  *::-webkit-scrollbar-thumb:hover {
    background-color: rgba(0, 0, 0, 0.5);
  }

  *::-webkit-scrollbar-corner {
    background: transparent;
  }

  /* Headings responsivos otimizados */
  h1 {
    @apply font-clash-display text-2xl md:text-4xl lg:text-5xl font-bold text-gray-900 leading-tight;
  }

  h2 {
    @apply font-clash-display text-xl md:text-3xl lg:text-4xl font-bold text-gray-900 leading-tight;
  }

  h3 {
    @apply font-clash-display text-lg md:text-2xl lg:text-3xl font-bold text-gray-900 leading-tight;
  }

  h4 {
    @apply font-clash-display text-base md:text-xl lg:text-2xl font-semibold text-gray-900 leading-tight;
  }

  h5 {
    @apply font-clash-display text-sm md:text-lg lg:text-xl font-semibold text-gray-900 leading-tight;
  }

  h6 {
    @apply font-clash-display text-xs md:text-base lg:text-lg font-medium text-gray-900 leading-tight;
  }

  /* Parágrafos responsivos */
  p {
    @apply text-sm md:text-base lg:text-lg leading-[140%] text-gray-700 font-normal;
  }
}

:root {
  /* Padrão do projeto: rubik como fonte base (body) via token --font-sans */
  font-family: var(--font-sans);

  --foreground-rgb: 26, 34, 56;
  --background-rgb: 243, 244, 246;
  --primary-color: 244, 120, 52; /* #f47834 */

  @apply scroll-smooth
}


.bg-grid-pattern {
  background-image: linear-gradient(
      to right,
      rgba(209, 213, 219, 0.2) 1px,
      transparent 1px
    ),
    linear-gradient(to bottom, rgba(209, 213, 219, 0.2) 1px, transparent 1px);
  background-size: 80px 80px;
}



/* Estilos globais para o conteúdo de posts/artigos */

.post-content {
  /* Garantir que o conteúdo não ultrapasse o container */
  max-width: 100%;
  overflow-wrap: break-word;
  word-wrap: break-word;
  hyphens: auto;

  p {
    @apply text-gray-700 text-base md:text-xl leading-[140%] font-normal;
    max-width: 100%;
    overflow-wrap: break-word;
  }


  h1 {
    @apply font-clash-display text-gray-900 text-xl md:text-2xl lg:text-3xl font-bold leading-tight;
    max-width: 100%;
    overflow-wrap: break-word;
    word-break: break-word;
  }

  h2 {
    @apply font-clash-display text-gray-900 text-lg md:text-xl lg:text-2xl font-bold leading-tight;
    max-width: 100%;
    overflow-wrap: break-word;
    word-break: break-word;
  }

  h3 {
    @apply font-clash-display text-gray-900 text-base md:text-lg lg:text-xl font-bold leading-tight;
    max-width: 100%;
    overflow-wrap: break-word;
    word-break: break-word;
  }

  h4 {
    @apply font-clash-display text-gray-900 text-sm md:text-base lg:text-lg font-semibold leading-tight;
    max-width: 100%;
    overflow-wrap: break-word;
    word-break: break-word;
  }

  img {
    @apply rounded-lg w-full mb-5 md:mb-6 max-h-[250px] md:max-h-[500px] h-full object-cover;
    max-width: 100% !important;
    height: auto !important;
  }

  ul,
  ol {
    @apply list-disc list-inside mb-5 md:mb-6 relative md:pl-4 md:before:content-['_'];
    max-width: 100%;
  }

  ul::before,
  ol::before {
    @apply bg-gray-200 w-0.5 h-full absolute top-1/2 bottom-0 left-0 translate-y-[-50%] md:rounded-3xl;
  }

  .no-line::before {
    @apply hidden!;
  }

  ul ol,
  ul ul,
  ol ol ol ul {
    @apply ml-10 before:content-none;
  }

  li {
    @apply text-gray-700 text-base md:text-xl leading-[140%] font-normal mb-2;
    max-width: 100%;
    overflow-wrap: break-word;
  }

  li * {
    @apply mb-0;
  }

  a {
    @apply text-blue-600 hover:text-blue-700 text-base md:text-xl leading-[140%] font-normal mb-4 md:mb-6 underline transition-colors duration-300;
    max-width: 100%;
    overflow-wrap: break-word;
    word-break: break-all;
  }

  hr {
    @apply mb-4 md:mb-6 border-gray-200;
    max-width: 100%;
  }

  /* Garantir que todos os elementos não ultrapassem o container */
  * {
    max-width: 100% !important;
    box-sizing: border-box;
  }

  /* Estilos específicos para elementos que podem causar overflow */
  pre, code {
    max-width: 100%;
    overflow-x: auto;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  blockquote {
    max-width: 100%;
    overflow-wrap: break-word;
  }

  table {
    max-width: 100%;
    overflow-x: auto;
    display: block;
    white-space: nowrap;
  }

  table tbody {
    display: table;
    width: 100%;
  }
}

/* Animação shine otimizada para melhor performance */
@keyframes shine {
  0% {
    transform: translate3d(-100%, 0, 0) skewX(-25deg);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    transform: translate3d(200%, 0, 0) skewX(-25deg);
    opacity: 0;
  }
}
